{"ast":null,"code":"import _slicedToArray from \"D:/Web/films-search-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nexport var useRoveFocus = function useRoveFocus(size) {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentFocus = _React$useState2[0],\n      setCurrentFocus = _React$useState2[1];\n\n  var handleKeyDown = React.useCallback(function (e) {\n    if (e.keyCode === 40) {\n      // Down arrow\n      e.preventDefault();\n      setCurrentFocus(currentFocus === size - 1 ? 0 : currentFocus + 1);\n    } else if (e.keyCode === 38) {\n      // Up arrow\n      e.preventDefault();\n      setCurrentFocus(currentFocus === 0 ? size - 1 : currentFocus - 1);\n    }\n  }, [size, currentFocus, setCurrentFocus]);\n  React.useEffect(function () {\n    document.addEventListener(\"keydown\", handleKeyDown, false);\n    return function () {\n      document.removeEventListener(\"keydown\", handleKeyDown, false);\n    };\n  }, [handleKeyDown]);\n  return [currentFocus, setCurrentFocus];\n};\n\n_s(useRoveFocus, \"n5hZ9tkibLrWqdMuB0l/+HHgdk4=\");","map":{"version":3,"sources":["D:/Web/films-search-react/utils/useRoveFocus.js"],"names":["React","useRoveFocus","size","useState","currentFocus","setCurrentFocus","handleKeyDown","useCallback","e","keyCode","preventDefault","useEffect","document","addEventListener","removeEventListener"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAAA;;AAAA,wBACIF,KAAK,CAACG,QAAN,CAAe,CAAf,CADJ;AAAA;AAAA,MAC7BC,YAD6B;AAAA,MACfC,eADe;;AAGpC,MAAMC,aAAa,GAAGN,KAAK,CAACO,WAAN,CACpB,UAAAC,CAAC,EAAI;AACH,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpB;AACAD,MAAAA,CAAC,CAACE,cAAF;AACAL,MAAAA,eAAe,CAACD,YAAY,KAAKF,IAAI,GAAG,CAAxB,GAA4B,CAA5B,GAAgCE,YAAY,GAAG,CAAhD,CAAf;AACD,KAJD,MAIO,IAAII,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAC3B;AACAD,MAAAA,CAAC,CAACE,cAAF;AACAL,MAAAA,eAAe,CAACD,YAAY,KAAK,CAAjB,GAAqBF,IAAI,GAAG,CAA5B,GAAgCE,YAAY,GAAG,CAAhD,CAAf;AACD;AACF,GAXmB,EAYpB,CAACF,IAAD,EAAOE,YAAP,EAAqBC,eAArB,CAZoB,CAAtB;AAeAL,EAAAA,KAAK,CAACW,SAAN,CAAgB,YAAM;AACpBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCP,aAArC,EAAoD,KAApD;AACA,WAAO,YAAM;AACXM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCR,aAAxC,EAAuD,KAAvD;AACD,KAFD;AAGD,GALD,EAKG,CAACA,aAAD,CALH;AAOA,SAAO,CAACF,YAAD,EAAeC,eAAf,CAAP;AACD,CA1BM;;GAAMJ,Y","sourcesContent":["import React from \"react\";\r\n\r\nexport const useRoveFocus = (size) => {\r\n  const [currentFocus, setCurrentFocus] = React.useState(0);\r\n\r\n  const handleKeyDown = React.useCallback(\r\n    e => {\r\n      if (e.keyCode === 40) {\r\n        // Down arrow\r\n        e.preventDefault();\r\n        setCurrentFocus(currentFocus === size - 1 ? 0 : currentFocus + 1);\r\n      } else if (e.keyCode === 38) {\r\n        // Up arrow\r\n        e.preventDefault();\r\n        setCurrentFocus(currentFocus === 0 ? size - 1 : currentFocus - 1);\r\n      }\r\n    },\r\n    [size, currentFocus, setCurrentFocus]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyDown, false);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown, false);\r\n    };\r\n  }, [handleKeyDown]);\r\n\r\n  return [currentFocus, setCurrentFocus];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}