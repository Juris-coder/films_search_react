{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"D:/Web/films-search-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Web\\\\films-search-react\\\\components\\\\Input\\\\Input.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport searchIcon from \"@iconify/icons-gg/search\";\nimport styles from \"./styles.module.scss\";\nimport { Autocomplete } from \"..\";\nimport * as templates from \"../Autocomplete/templates\";\nvar templateNames = Object.keys(templates);\nexport var Input = function Input() {\n  _s();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      filmName = _React$useState2[0],\n      setFilmName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"Poster\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      template = _React$useState4[0],\n      setTemplate = _React$useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container__input,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        className: styles.iconify,\n        icon: searchIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputOuter,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.query,\n          placeholder: \"start typing...\",\n          onChange: function onChange(event) {\n            return setFilmName(event.target.value);\n          },\n          value: filmName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.radio,\n          children: templateNames.map(function (templateName) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [templateName, /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: styles.radioInput,\n                  checked: template === templateName,\n                  type: \"radio\",\n                  onChange: function onChange() {\n                    return setTemplate(templateName);\n                  },\n                  name: \"type\",\n                  value: templateName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, _this)\n            }, templateName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        filmName: filmName,\n        templateType: template\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Input, \"LkvkMgPW1mylVrjLmjc+7scKht8=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["D:/Web/films-search-react/components/Input/Input.jsx"],"names":["React","Icon","searchIcon","styles","Autocomplete","templates","templateNames","Object","keys","Input","useState","filmName","setFilmName","template","setTemplate","container","container__input","iconify","inputOuter","query","event","target","value","radio","map","templateName","radioInput"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,YAAT,QAA6B,IAA7B;AACA,OAAO,KAAKC,SAAZ,MAA2B,2BAA3B;AAEA,IAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYH,SAAZ,CAAtB;AAEA,OAAO,IAAMI,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,wBACOT,KAAK,CAACU,QAAN,CAAe,EAAf,CADP;AAAA;AAAA,MAClBC,QADkB;AAAA,MACRC,WADQ;;AAAA,yBAEOZ,KAAK,CAACU,QAAN,CAAe,QAAf,CAFP;AAAA;AAAA,MAElBG,QAFkB;AAAA,MAERC,WAFQ;;AAIzB,sBACE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACY,SAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACa,gBAAvB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEb,MAAM,CAACc,OAAxB;AAAiC,QAAA,IAAI,EAAEf;AAAvC;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAK,QAAA,SAAS,EAAEC,MAAM,CAACe,UAAvB;AAAA,gCACE;AACE,UAAA,SAAS,EAAEf,MAAM,CAACgB,KADpB;AAEE,UAAA,WAAW,EAAC,iBAFd;AAGE,UAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,mBAAWR,WAAW,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAtB;AAAA,WAHZ;AAIE,UAAA,KAAK,EAAEX;AAJT;AAAA;AAAA;AAAA;AAAA,iBADF,eAOE;AAAK,UAAA,SAAS,EAAER,MAAM,CAACoB,KAAvB;AAAA,oBACGjB,aAAa,CAACkB,GAAd,CAAkB,UAACC,YAAD;AAAA,gCACjB;AAAA,qCACE;AAAA,2BACGA,YADH,eAEE;AACE,kBAAA,SAAS,EAAEtB,MAAM,CAACuB,UADpB;AAEE,kBAAA,OAAO,EAAEb,QAAQ,KAAKY,YAFxB;AAGE,kBAAA,IAAI,EAAC,OAHP;AAIE,kBAAA,QAAQ,EAAE;AAAA,2BAAMX,WAAW,CAACW,YAAD,CAAjB;AAAA,mBAJZ;AAKE,kBAAA,IAAI,EAAC,MALP;AAME,kBAAA,KAAK,EAAEA;AANT;AAAA;AAAA;AAAA;AAAA,yBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,eAAUA,YAAV;AAAA;AAAA;AAAA;AAAA,qBADiB;AAAA,WAAlB;AADH;AAAA;AAAA;AAAA;AAAA,iBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eA2BE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEd,QAAxB;AAAkC,QAAA,YAAY,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,eA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAiCD,CArCM;;GAAMJ,K;;KAAAA,K","sourcesContent":["import * as React from \"react\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport searchIcon from \"@iconify/icons-gg/search\";\r\n\r\nimport styles from \"./styles.module.scss\";\r\nimport { Autocomplete } from \"..\";\r\nimport * as templates from \"../Autocomplete/templates\";\r\n\r\nconst templateNames = Object.keys(templates);\r\n\r\nexport const Input = () => {\r\n  const [filmName, setFilmName] = React.useState(\"\");\r\n  const [template, setTemplate] = React.useState(\"Poster\");\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.container__input}>\r\n        <Icon className={styles.iconify} icon={searchIcon} />\r\n        <div className={styles.inputOuter}>\r\n          <input\r\n            className={styles.query}\r\n            placeholder=\"start typing...\"\r\n            onChange={(event) => setFilmName(event.target.value)}\r\n            value={filmName}\r\n          />\r\n          <div className={styles.radio}>\r\n            {templateNames.map((templateName) => (\r\n              <div key={templateName}>\r\n                <label>\r\n                  {templateName}\r\n                  <input\r\n                    className={styles.radioInput}\r\n                    checked={template === templateName}\r\n                    type=\"radio\"\r\n                    onChange={() => setTemplate(templateName)}\r\n                    name=\"type\"\r\n                    value={templateName}\r\n                  />\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <Autocomplete filmName={filmName} templateType={template} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}