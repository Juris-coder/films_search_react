{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport _defineProperty from \"D:/Web/films-search-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/Web/films-search-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Web/films-search-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/Web/films-search-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Web\\\\films-search-react\\\\components\\\\Autocomplete\\\\Autocomplete.jsx\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./styles.module.scss\";\nimport { apiCall } from \"../../api/apiCall\";\nimport { useRoveFocus } from \"../../utils\";\nimport * as templates from \"./templates\";\n\nvar useFindFilm = function useFindFilm(filmName) {\n  _s();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      error = _React$useState2[0],\n      setError = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      query = _React$useState4[0],\n      setQuery = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loading = _React$useState6[0],\n      setLoading = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      items = _React$useState8[0],\n      setItems = _React$useState8[1];\n\n  var fetchFilms = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setLoading(true);\n              setQuery(true);\n              _context.next = 5;\n              return apiCall(filmName);\n\n            case 5:\n              result = _context.sent;\n              setLoading(false);\n              setItems(result.results);\n              _context.next = 15;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              setItems([]);\n              setError(_context.t0);\n              setLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function fetchFilms() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  React.useEffect(function () {\n    if (filmName !== \"\") {\n      var timeout = setTimeout(function () {\n        return fetchFilms();\n      }, 700);\n      return function () {\n        return clearTimeout(timeout);\n      };\n    }\n  }, [filmName]);\n  return {\n    items: items,\n    loading: loading,\n    error: error,\n    query: query\n  };\n};\n\n_s(useFindFilm, \"4neQKPr6IHKP/2MvHvWYM8kA+JI=\");\n\nexport var Autocomplete = function Autocomplete(props) {\n  _s2();\n\n  var templateType = props.templateType,\n      filmName = props.filmName;\n\n  var _useFindFilm = useFindFilm(filmName),\n      items = _useFindFilm.items,\n      loading = _useFindFilm.loading,\n      error = _useFindFilm.error,\n      query = _useFindFilm.query;\n\n  var Template = templates[templateType];\n  var films = templateType === \"Poster\" ? items.slice(0, 3) : items;\n\n  var _useRoveFocus = useRoveFocus(films.length),\n      _useRoveFocus2 = _slicedToArray(_useRoveFocus, 2),\n      focus = _useRoveFocus2[0],\n      setFocus = _useRoveFocus2[1];\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.autocompleteStyling,\n      children: \"An error has occured.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.autocompleteStyling,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, _this);\n  }\n\n  if (!query) {\n    return null;\n  } else if (query && items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.autocompleteStyling,\n      children: \"No results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, _this);\n  } else if (query && items.length !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.autocompleteStyling,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(styles.autocompleteItems, _defineProperty({}, styles.posters, templateType === \"Poster\")),\n        children: films.map(function (film, i) {\n          return /*#__PURE__*/_createElement(Template, _objectSpread(_objectSpread({}, film), {}, {\n            key: film.id,\n            index: i,\n            items: films,\n            focus: focus === i,\n            setFocus: setFocus,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }\n          }));\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this);\n  }\n};\n\n_s2(Autocomplete, \"idosbLs033djUbpx+ODXLZfa2Cg=\", false, function () {\n  return [useFindFilm, useRoveFocus];\n});\n\n_c = Autocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"sources":["D:/Web/films-search-react/components/Autocomplete/Autocomplete.jsx"],"names":["React","classNames","styles","apiCall","useRoveFocus","templates","useFindFilm","filmName","useState","error","setError","query","setQuery","loading","setLoading","items","setItems","fetchFilms","result","results","useEffect","timeout","setTimeout","clearTimeout","Autocomplete","props","templateType","Template","films","slice","length","focus","setFocus","autocompleteStyling","autocompleteItems","posters","map","film","i","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAAA;;AAAA,wBACNP,KAAK,CAACQ,QAAN,CAAe,IAAf,CADM;AAAA;AAAA,MACzBC,KADyB;AAAA,MAClBC,QADkB;;AAAA,yBAENV,KAAK,CAACQ,QAAN,CAAe,KAAf,CAFM;AAAA;AAAA,MAEzBG,KAFyB;AAAA,MAElBC,QAFkB;;AAAA,yBAGFZ,KAAK,CAACQ,QAAN,CAAe,KAAf,CAHE;AAAA;AAAA,MAGzBK,OAHyB;AAAA,MAGhBC,UAHgB;;AAAA,yBAINd,KAAK,CAACQ,QAAN,CAAe,EAAf,CAJM;AAAA;AAAA,MAIzBO,KAJyB;AAAA,MAIlBC,QAJkB;;AAMhC,MAAMC,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfH,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,cAAAA,QAAQ,CAAC,IAAD,CAAR;AAHe;AAAA,qBAIMT,OAAO,CAACI,QAAD,CAJb;;AAAA;AAITW,cAAAA,MAJS;AAKfJ,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,cAAAA,QAAQ,CAACE,MAAM,CAACC,OAAR,CAAR;AANe;AAAA;;AAAA;AAAA;AAAA;AAQfH,cAAAA,QAAQ,CAAC,EAAD,CAAR;AACAN,cAAAA,QAAQ,aAAR;AACAI,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVG,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAcAjB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAM;AACpB,QAAIb,QAAQ,KAAK,EAAjB,EAAqB;AACnB,UAAMc,OAAO,GAAGC,UAAU,CAAC;AAAA,eAAML,UAAU,EAAhB;AAAA,OAAD,EAAqB,GAArB,CAA1B;AACA,aAAO;AAAA,eAAMM,YAAY,CAACF,OAAD,CAAlB;AAAA,OAAP;AACD;AACF,GALD,EAKG,CAACd,QAAD,CALH;AAOA,SAAO;AAAEQ,IAAAA,KAAK,EAALA,KAAF;AAASF,IAAAA,OAAO,EAAPA,OAAT;AAAkBJ,IAAAA,KAAK,EAALA,KAAlB;AAAyBE,IAAAA,KAAK,EAALA;AAAzB,GAAP;AACD,CA5BD;;GAAML,W;;AA8BN,OAAO,IAAMkB,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAAA,MAC7BC,YAD6B,GACFD,KADE,CAC7BC,YAD6B;AAAA,MACfnB,QADe,GACFkB,KADE,CACflB,QADe;;AAAA,qBAEID,WAAW,CAACC,QAAD,CAFf;AAAA,MAE7BQ,KAF6B,gBAE7BA,KAF6B;AAAA,MAEtBF,OAFsB,gBAEtBA,OAFsB;AAAA,MAEbJ,KAFa,gBAEbA,KAFa;AAAA,MAENE,KAFM,gBAENA,KAFM;;AAGrC,MAAMgB,QAAQ,GAAGtB,SAAS,CAACqB,YAAD,CAA1B;AAEA,MAAME,KAAK,GAAGF,YAAY,KAAK,QAAjB,GAA4BX,KAAK,CAACc,KAAN,CAAY,CAAZ,EAAe,CAAf,CAA5B,GAAgDd,KAA9D;;AALqC,sBAMXX,YAAY,CAACwB,KAAK,CAACE,MAAP,CAND;AAAA;AAAA,MAM9BC,KAN8B;AAAA,MAMvBC,QANuB;;AAQrC,MAAIvB,KAAJ,EAAW;AACT,wBACE;AAAK,MAAA,SAAS,EAAEP,MAAM,CAAC+B,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAGD;;AAED,MAAIpB,OAAJ,EAAa;AACX,wBAAO;AAAK,MAAA,SAAS,EAAEX,MAAM,CAAC+B,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,MAAI,CAACtB,KAAL,EAAY;AACV,WAAO,IAAP;AACD,GAFD,MAEO,IAAIA,KAAK,IAAII,KAAK,CAACe,MAAN,KAAiB,CAA9B,EAAiC;AACtC,wBAAO;AAAK,MAAA,SAAS,EAAE5B,MAAM,CAAC+B,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAFM,MAEA,IAAItB,KAAK,IAAII,KAAK,CAACe,MAAN,KAAiB,CAA9B,EAAiC;AACtC,wBACE;AAAK,MAAA,SAAS,EAAE5B,MAAM,CAAC+B,mBAAvB;AAAA,6BACE;AACE,QAAA,SAAS,EAAEhC,UAAU,CAACC,MAAM,CAACgC,iBAAR,sBAClBhC,MAAM,CAACiC,OADW,EACDT,YAAY,KAAK,QADhB,EADvB;AAAA,kBAKGE,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,8BACT,eAAC,QAAD,kCACMD,IADN;AAEE,YAAA,GAAG,EAAEA,IAAI,CAACE,EAFZ;AAGE,YAAA,KAAK,EAAED,CAHT;AAIE,YAAA,KAAK,EAAEV,KAJT;AAKE,YAAA,KAAK,EAAEG,KAAK,KAAKO,CALnB;AAME,YAAA,QAAQ,EAAEN,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADS;AAAA,SAAV;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF;AAoBD;AACF,CA5CM;;IAAMR,Y;UAE8BlB,W,EAIfF,Y;;;KANfoB,Y","sourcesContent":["import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./styles.module.scss\";\r\nimport { apiCall } from \"../../api/apiCall\";\r\nimport { useRoveFocus } from \"../../utils\";\r\nimport * as templates from \"./templates\";\r\n\r\nconst useFindFilm = (filmName) => {\r\n  const [error, setError] = React.useState(null);\r\n  const [query, setQuery] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [items, setItems] = React.useState([]);\r\n\r\n  const fetchFilms = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setQuery(true);\r\n      const result = await apiCall(filmName);\r\n      setLoading(false);\r\n      setItems(result.results);\r\n    } catch (error) {\r\n      setItems([]);\r\n      setError(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (filmName !== \"\") {\r\n      const timeout = setTimeout(() => fetchFilms(), 700);\r\n      return () => clearTimeout(timeout);\r\n    }\r\n  }, [filmName]);\r\n\r\n  return { items, loading, error, query };\r\n};\r\n\r\nexport const Autocomplete = (props) => {\r\n  const { templateType, filmName } = props;\r\n  const { items, loading, error, query } = useFindFilm(filmName);\r\n  const Template = templates[templateType];\r\n\r\n  const films = templateType === \"Poster\" ? items.slice(0, 3) : items;\r\n  const [focus, setFocus] = useRoveFocus(films.length);\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={styles.autocompleteStyling}>An error has occured.</div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className={styles.autocompleteStyling}>Loading...</div>;\r\n  }\r\n\r\n  if (!query) {\r\n    return null;\r\n  } else if (query && items.length === 0) {\r\n    return <div className={styles.autocompleteStyling}>No results</div>;\r\n  } else if (query && items.length !== 0) {\r\n    return (\r\n      <div className={styles.autocompleteStyling}>\r\n        <div\r\n          className={classNames(styles.autocompleteItems, {\r\n            [styles.posters]: templateType === \"Poster\",\r\n          })}\r\n        >\r\n          {films.map((film, i) => (\r\n            <Template\r\n              {...film}\r\n              key={film.id}\r\n              index={i}\r\n              items={films}\r\n              focus={focus === i}\r\n              setFocus={setFocus}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}