{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Web\\\\films-search-react\\\\components\\\\Autocomplete\\\\templates\\\\Poster.jsx\";\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"../styles.module.scss\";\nimport { makeFilmURL, externalURL } from \"../../../utils\";\nimport { IMAGE_PATH, NOT_FOUND_IMAGE_PATH } from \"../../../configs/env\";\nexport const Poster = props => {\n  const {\n    id,\n    title,\n    poster_path,\n    release_date,\n    index,\n    focus,\n    setFocus\n  } = props;\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (focus) {\n      ref.current.focus();\n    }\n  }, [focus]);\n  const handleSelect = React.useCallback(() => {\n    setFocus(index);\n    externalURL(makeFilmURL(id, title));\n  }, [index, setFocus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(styles.filmDiv, styles.postersDiv, {\n      [styles.active]: focus\n    }),\n    onClick: handleSelect,\n    onKeyPress: handleSelect,\n    tabIndex: focus ? 0 : -1,\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.filmPoster,\n      src: poster_path ? `${IMAGE_PATH}${poster_path}` : NOT_FOUND_IMAGE_PATH,\n      alt: \"film_poster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: styles.filmTitle,\n      children: `${title} `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.filmYear,\n      children: release_date ? release_date.slice(0, 4) : \"unknown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["D:/Web/films-search-react/components/Autocomplete/templates/Poster.jsx"],"names":["React","classNames","styles","makeFilmURL","externalURL","IMAGE_PATH","NOT_FOUND_IMAGE_PATH","Poster","props","id","title","poster_path","release_date","index","focus","setFocus","ref","useRef","useEffect","current","handleSelect","useCallback","filmDiv","postersDiv","active","filmPoster","filmTitle","filmYear","slice"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,gBAAzC;AACA,SAASC,UAAT,EAAqBC,oBAArB,QAAiD,sBAAjD;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAC/B,QAAM;AACJC,IAAAA,EADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA;AAPI,MAQFP,KARJ;AAUA,QAAMQ,GAAG,GAAGhB,KAAK,CAACiB,MAAN,CAAa,IAAb,CAAZ;AAEAjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,QAAIJ,KAAJ,EAAW;AACTE,MAAAA,GAAG,CAACG,OAAJ,CAAYL,KAAZ;AACD;AACF,GAJD,EAIG,CAACA,KAAD,CAJH;AAMA,QAAMM,YAAY,GAAGpB,KAAK,CAACqB,WAAN,CAAkB,MAAM;AAC3CN,IAAAA,QAAQ,CAACF,KAAD,CAAR;AACAT,IAAAA,WAAW,CAACD,WAAW,CAACM,EAAD,EAAKC,KAAL,CAAZ,CAAX;AACD,GAHoB,EAGlB,CAACG,KAAD,EAAQE,QAAR,CAHkB,CAArB;AAKA,sBACE;AACE,IAAA,SAAS,EAAEd,UAAU,CAACC,MAAM,CAACoB,OAAR,EAAiBpB,MAAM,CAACqB,UAAxB,EAAoC;AACvD,OAACrB,MAAM,CAACsB,MAAR,GAAiBV;AADsC,KAApC,CADvB;AAIE,IAAA,OAAO,EAAEM,YAJX;AAKE,IAAA,UAAU,EAAEA,YALd;AAME,IAAA,QAAQ,EAAEN,KAAK,GAAG,CAAH,GAAO,CAAC,CANzB;AAOE,IAAA,GAAG,EAAEE,GAPP;AAAA,4BASE;AACE,MAAA,SAAS,EAAEd,MAAM,CAACuB,UADpB;AAEE,MAAA,GAAG,EAAEd,WAAW,GAAI,GAAEN,UAAW,GAAEM,WAAY,EAA/B,GAAmCL,oBAFrD;AAGE,MAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,YATF,eAcE;AAAI,MAAA,SAAS,EAAEJ,MAAM,CAACwB,SAAtB;AAAA,gBAAmC,GAAEhB,KAAM;AAA3C;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAG,MAAA,SAAS,EAAER,MAAM,CAACyB,QAArB;AAAA,gBACGf,YAAY,GAAGA,YAAY,CAACgB,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAH,GAA8B;AAD7C;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7CM","sourcesContent":["import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"../styles.module.scss\";\r\nimport { makeFilmURL, externalURL } from \"../../../utils\";\r\nimport { IMAGE_PATH, NOT_FOUND_IMAGE_PATH } from \"../../../configs/env\";\r\n\r\nexport const Poster = (props) => {\r\n  const {\r\n    id,\r\n    title,\r\n    poster_path,\r\n    release_date,\r\n    index,\r\n    focus,\r\n    setFocus,\r\n  } = props;\r\n\r\n  const ref = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (focus) {\r\n      ref.current.focus();\r\n    }\r\n  }, [focus]);\r\n\r\n  const handleSelect = React.useCallback(() => {\r\n    setFocus(index);\r\n    externalURL(makeFilmURL(id, title));\r\n  }, [index, setFocus]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames(styles.filmDiv, styles.postersDiv, {\r\n        [styles.active]: focus,\r\n      })}\r\n      onClick={handleSelect}\r\n      onKeyPress={handleSelect}\r\n      tabIndex={focus ? 0 : -1}\r\n      ref={ref}\r\n    >\r\n      <img\r\n        className={styles.filmPoster}\r\n        src={poster_path ? `${IMAGE_PATH}${poster_path}` : NOT_FOUND_IMAGE_PATH}\r\n        alt=\"film_poster\"\r\n      />\r\n      <h4 className={styles.filmTitle}>{`${title} `}</h4>\r\n      <p className={styles.filmYear}>\r\n        {release_date ? release_date.slice(0, 4) : \"unknown\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}